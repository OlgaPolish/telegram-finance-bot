#!/usr/bin/env python
# coding: utf-8

from dotenv import load_dotenv
load_dotenv()

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler, CallbackQueryHandler
import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime
import pytz
import os
import logging
import json
import base64

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
  format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
  level=logging.INFO
)
logger = logging.getLogger(__name__)

# --- GOOGLE SHEETS SETUP ---
SCOPES = [
  'https://www.googleapis.com/auth/spreadsheets',
  'https://www.googleapis.com/auth/drive'
]

def get_google_sheet():
  """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ Google Sheet - —Ç–æ—á–Ω–æ —Ç–∞–∫–∞—è –∂–µ –ª–æ–≥–∏–∫–∞ –∫–∞–∫ –≤ —Ç–µ—Å—Ç–µ"""
  try:
      # –ü–æ–ª—É—á–∞–µ–º credentials - –¢–û–ß–ù–û –∫–∞–∫ –≤ —Ç–µ—Å—Ç–µ
      credentials_base64 = os.getenv('GOOGLE_CREDENTIALS_BASE64')
      if credentials_base64:
          credentials_json = base64.b64decode(credentials_base64).decode('utf-8')
          credentials_dict = json.loads(credentials_json)
          creds = Credentials.from_service_account_info(credentials_dict, scopes=SCOPES)
      else:
          creds = Credentials.from_service_account_file('finance-bot-keys.json', scopes=SCOPES)
      
      # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Google Sheets - –¢–û–ß–ù–û –∫–∞–∫ –≤ —Ç–µ—Å—Ç–µ
      client = gspread.authorize(creds)
      sheet_name = os.getenv('GOOGLE_SHEET_NAME', 'MY_Dvag')
      sheet = client.open(sheet_name).sheet1
      
      logger.info(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets '{sheet_name}' —É—Å–ø–µ—à–Ω–æ")
      return sheet
      
  except Exception as e:
      logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets: {e}")
      return None

# --- TELEGRAM BOT ---
TOKEN = os.getenv('TOKEN') or os.getenv('TELEGRAM_BOT_TOKEN')
if not TOKEN:
  raise Exception("–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω TOKEN –∏–ª–∏ TELEGRAM_BOT_TOKEN")

# –≠—Ç–∞–ø—ã –¥–∏–∞–ª–æ–≥–∞
TEMA, NAME, PHONE, DATE = range(4)

def get_current_datetime():
  """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Å—Ä–µ–¥–Ω–µ–µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ"""
  cet_tz = pytz.timezone('CET')
  now = datetime.now(cet_tz)
  return now.strftime('%d.%m.%Y %H:%M:%S')

def get_instagram_keyboard():
  """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π Instagram"""
  keyboard = [
      [InlineKeyboardButton("üì∏ –ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤ Instagram", url="https://www.instagram.com/olga_finance_/")]
  ]
  return InlineKeyboardMarkup(keyboard)

def get_main_keyboard():
  """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–ø—Ü–∏—è–º–∏"""
  keyboard = [
      [InlineKeyboardButton("üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="book_consultation")],
      [InlineKeyboardButton("üì∏ –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –≤ Instagram", url="https://www.instagram.com/olga_finance_/")]
  ]
  return InlineKeyboardMarkup(keyboard)

def get_restart_keyboard():
  """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π —Ä–µ—Å—Ç–∞—Ä—Ç–∞"""
  keyboard = [
      [InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="restart")],
      [InlineKeyboardButton("üì∏ Instagram", url="https://www.instagram.com/olga_finance_/")]
  ]
  return InlineKeyboardMarkup(keyboard)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
  """–ö–æ–º–∞–Ω–¥–∞ /start - –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞"""
  logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –Ω–∞—á–∞–ª –¥–∏–∞–ª–æ–≥")
  
  # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ —Ä–µ—Å—Ç–∞—Ä—Ç–µ
  context.user_data.clear()
  
  await update.message.reply_text(
      "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –û–ª—å–≥–∞ üë©‚Äçüíº\n\n"
      "üéØ –ü–æ–º–æ–≥–∞—é –ª—é–¥—è–º:\n"
      "‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å –ª–∏—á–Ω—ã–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏\n"
      "‚Ä¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–µ–Ω—Å–∏—é\n"
      "‚Ä¢ –í—ã–±–∏—Ä–∞—Ç—å —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ\n"
      "‚Ä¢ –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≥—Ä–∞–º–æ—Ç–Ω–æ\n"
      "‚Ä¢ –û—Ñ–æ—Ä–º–ª—è—Ç—å –∏–ø–æ—Ç–µ–∫—É\n"
      "‚Ä¢ –†–µ—à–∞—Ç—å –±–∏–∑–Ω–µ—Å-–∑–∞–¥–∞—á–∏\n\n"
      "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
      reply_markup=get_main_keyboard()
  )
  return ConversationHandler.END

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
  """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
  query = update.callback_query
  await query.answer()
  
  if query.data == "book_consultation":
      # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
      context.user_data.clear()
      
      await query.edit_message_text(
          "–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π—Ç–µ –∑–∞–ø–∏—à–µ–º –≤–∞—Å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é üìÖ\n\n"
          "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ —Ç–µ–º–∞–º:\n\n"   
          "1.üí∞ –õ–∏—á–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å—ã\n"
          "2.üèñÔ∏è –ü–µ–Ω—Å–∏–æ–Ω–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ\n"
          "3.üõ°Ô∏è –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è\n"
          "4.üìà –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏\n"
          "5.üè† –ò–ø–æ—Ç–µ–∫–∞\n"
          "6.üíº –ë–∏–∑–Ω–µ—Å-—Ñ–∏–Ω–∞–Ω—Å—ã\n"
          "7.üìû –î—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å\n\n"
          "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–º—ã:"      )
      return TEMA
  
  elif query.data == "restart":
      # –†–µ—Å—Ç–∞—Ä—Ç –±–æ—Ç–∞
      context.user_data.clear()
      
      await query.edit_message_text(
          "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ!\n\n"
          "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –û–ª—å–≥–∞ üë©‚Äçüíº\n\n"
          "üéØ –ü–æ–º–æ–≥–∞—é –ª—é–¥—è–º:\n"
          "‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å –ª–∏—á–Ω—ã–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏\n"
          "‚Ä¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–µ–Ω—Å–∏—é\n"
          "‚Ä¢ –í—ã–±–∏—Ä–∞—Ç—å —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ\n"
          "‚Ä¢ –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≥—Ä–∞–º–æ—Ç–Ω–æ\n"
          "‚Ä¢ –û—Ñ–æ—Ä–º–ª—è—Ç—å –∏–ø–æ—Ç–µ–∫—É\n"
          "‚Ä¢ –†–µ—à–∞—Ç—å –±–∏–∑–Ω–µ—Å-–∑–∞–¥–∞—á–∏\n\n"
          "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
          reply_markup=get_main_keyboard()
      )
      return ConversationHandler.END
  
  return ConversationHandler.END

async def get_tema(update: Update, context: ContextTypes.DEFAULT_TYPE):
  context.user_data["tema"] = update.message.text
  await update.message.reply_text(
      "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è:"  )
  return NAME

async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
  context.user_data["name"] = update.message.text
  await update.message.reply_text(
      "–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:"  )
  return PHONE

async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
  context.user_data["phone"] = update.message.text
  await update.message.reply_text(
      "–û—Ç–ª–∏—á–Ω–æ üëç –£–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 10.10.2025):"  )
  return DATE

async def get_date(update: Update, context: ContextTypes.DEFAULT_TYPE):
  context.user_data["date"] = update.message.text
  
  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
  created_at = get_current_datetime()
  
  try:
      logger.info(f"–ù–∞—á–∏–Ω–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {context.user_data['name']}")
      
      # –ü–æ–ª—É—á–∞–µ–º sheet - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ —Ñ—É–Ω–∫—Ü–∏—é —á—Ç–æ –∏ –≤ —Ç–µ—Å—Ç–µ
      sheet = get_google_sheet()
      
      if not sheet:
          logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç Google Sheet")
          await update.message.reply_text(
              "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.\n\n"
              "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Instagram:",
              reply_markup=get_restart_keyboard()
          )
          return ConversationHandler.END
      
      # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏
      row_data = [
          context.user_data["tema"], 
          context.user_data["name"], 
          context.user_data["phone"], 
          context.user_data["date"],
          created_at
      ]
      
      logger.info(f"–î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {row_data}")
      
      # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Google Sheets - –¢–û–ß–ù–û –∫–∞–∫ –≤ —Ç–µ—Å—Ç–µ
      sheet.append_row(row_data)
      
      logger.info(f"‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {context.user_data['name']} –≤ {created_at}")
      
      # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π –∑–∞–ø–∏—Å–∏
      success_keyboard = [
          [InlineKeyboardButton("üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –µ—â–µ —Ä–∞–∑", callback_data="book_consultation")],
          [InlineKeyboardButton("üîÑ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="restart")],
          [InlineKeyboardButton("üì∏ Instagram", url="https://www.instagram.com/olga_finance_/")]
      ]
      success_markup = InlineKeyboardMarkup(success_keyboard)
      
      await update.message.reply_text(
          f"–°–ø–∞—Å–∏–±–æ, {context.user_data['name']}! üéâ\n\n"
          "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é!\n"
          "üìû –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∏ –¥–µ—Ç–∞–ª–µ–π.\n\n"
          "üí° –ß—Ç–æ –¥–∞–ª—å—à–µ?",
          reply_markup=success_markup
      )
      
  except Exception as e:
      logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
      logger.error(f"‚ùå –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
      
      await update.message.reply_text(
          "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.\n\n"
          "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Instagram.\n"
          "–Ø –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–º–æ–≥—É –≤–∞–º —Å –∑–∞–ø–∏—Å—å—é! üòä",
          reply_markup=get_restart_keyboard()
      )
  
  return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
  logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –æ—Ç–º–µ–Ω–∏–ª –¥–∏–∞–ª–æ–≥")
  await update.message.reply_text(
      "–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞. üòä\n\n"
      "–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ –∏–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π:",
      reply_markup=get_restart_keyboard()
  )
  return ConversationHandler.END

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
  """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏"""
  await update.message.reply_text(
      "üÜò –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:\n\n"
      "‚Ä¢ /start - –Ω–∞—á–∞—Ç—å –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
      "‚Ä¢ /help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
      "‚Ä¢ /cancel - –æ—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –∑–∞–ø–∏—Å—å\n\n"
      "üîÑ –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç:\n"
      "‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ /start\n"
      "‚Ä¢ –ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ'\n\n"
      "üìû –ï—Å–ª–∏ —É –≤–∞—Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π –Ω–∞–ø—Ä—è–º—É—é:",
      reply_markup=get_restart_keyboard()
  )

async def handle_unknown_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
  """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤–Ω–µ –¥–∏–∞–ª–æ–≥–∞"""
  await update.message.reply_text(
      "–ü—Ä–∏–≤–µ—Ç! üëã\n\n"
      "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º, –Ω–∞–∂–º–∏—Ç–µ /start –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
      reply_markup=get_main_keyboard()
  )

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
  """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
  logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ: {context.error}")
  
  # –ï—Å–ª–∏ –µ—Å—Ç—å update –∏ message, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
  if update and update.effective_message:
      try:
          await update.effective_message.reply_text(
              "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞.\n\n"
              "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π –Ω–∞–ø—Ä—è–º—É—é:",
              reply_markup=get_restart_keyboard()
          )
      except Exception as e:
          logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: {e}")

def main():
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
  print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets...")
  test_sheet = get_google_sheet()
  if test_sheet:
      print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets —Ä–∞–±–æ—Ç–∞–µ—Ç!")
  else:
      print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets!")
      return
  
  # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞
  app = Application.builder().token(TOKEN).build()

  # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∏–∞–ª–æ–≥–∞
  conv_handler = ConversationHandler(
      entry_points=[
          CallbackQueryHandler(button_handler, pattern="^book_consultation$")
      ],
      states={
          TEMA: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_tema)],
          NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
          PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_phone)],
          DATE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_date)],
      },
      fallbacks=[CommandHandler("cancel", cancel)],
  )

  # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  app.add_handler(CommandHandler("start", start))  # /start –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω
  app.add_handler(CommandHandler("help", help_command))
  app.add_handler(conv_handler)
  app.add_handler(CallbackQueryHandler(button_handler))  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
  
  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç —á—Ç–æ-—Ç–æ –≤–Ω–µ –¥–∏–∞–ª–æ–≥–∞)
  app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_unknown_message))
  
  app.add_error_handler(error_handler)
  
  logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
  print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
  app.run_polling()

if __name__ == "__main__":
  main()