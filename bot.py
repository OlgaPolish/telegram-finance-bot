#!/usr/bin/env python
# coding: utf-8

from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime
import pytz
import os
import logging
import json
import base64
import tempfile

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# --- GOOGLE SHEETS ---
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è credentials –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
def get_google_credentials():
    # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å credentials –∏–∑ Base64
    credentials_base64 = os.getenv('GOOGLE_CREDENTIALS_BASE64')
    if credentials_base64:
        try:
            # –î–µ–∫–æ–¥–∏—Ä—É–µ–º Base64
            credentials_json = base64.b64decode(credentials_base64).decode('utf-8')
            credentials_dict = json.loads(credentials_json)
            
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            with tempfile.NamedTemporaryFile(mode='w', suffix='.json', delete=False) as temp_file:
                json.dump(credentials_dict, temp_file)
                temp_file_path = temp_file.name
            
            return ServiceAccountCredentials.from_json_keyfile_name(temp_file_path, scope)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ GOOGLE_CREDENTIALS_BASE64: {e}")
    
    # –ï—Å–ª–∏ Base64 –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–ø—Ä–æ–±—É–µ–º –æ–±—ã—á–Ω—ã–π —Ñ–∞–π–ª
    credentials_file = os.getenv('GOOGLE_CREDENTIALS_FILE', 'finance-bot-keys.json')
    if os.path.exists(credentials_file):
        return ServiceAccountCredentials.from_json_keyfile_name(credentials_file, scope)
    
    raise Exception("–ù–µ –Ω–∞–π–¥–µ–Ω—ã —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Google. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GOOGLE_CREDENTIALS_BASE64 –∏–ª–∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª finance-bot-keys.json")

# –ü–æ–ª—É—á–∞–µ–º credentials
creds = get_google_credentials()
client = gspread.authorize(creds)

# –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
sheet_name = os.getenv('GOOGLE_SHEET_NAME', 'MY_Dvag')
sheet = client.open(sheet_name).sheet1

# --- TELEGRAM BOT ---
TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
if not TOKEN:
    raise Exception("–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω TELEGRAM_BOT_TOKEN")

# –≠—Ç–∞–ø—ã –¥–∏–∞–ª–æ–≥–∞
TEMA, NAME, PHONE, DATE = range(4)

def get_current_datetime():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Å—Ä–µ–¥–Ω–µ–µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ"""
    cet_tz = pytz.timezone('CET')  # –°—Ä–µ–¥–Ω–µ–µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–µ –≤—Ä–µ–º—è
    now = datetime.now(cet_tz)
    return now.strftime('%d.%m.%Y %H:%M:%S')

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –Ω–∞—á–∞–ª –¥–∏–∞–ª–æ–≥")
    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –û–ª—å–≥–∞ üë©‚Äçüíº\n \n" 
        "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ —Ç–µ–º–∞–º:  \n \n"   
        "1.üí∞ –õ–∏—á–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å—ã \n"
        "2.üèñÔ∏è –ü–µ–Ω—Å–∏–æ–Ω–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ\n"
        "3.üõ°Ô∏è –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è\n"
        "4.üìà –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏  \n"
        "5.üè† –ò–ø–æ—Ç–µ–∫–∞\n"
        "6.üíº –ë–∏–∑–Ω–µ—Å-—Ñ–∏–Ω–∞–Ω—Å—ã\n"
        "7.üìû –î—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å\n \n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–º—ã:"
    )
    return TEMA
    
async def get_tema(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["tema"] = update.message.text
    await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    return NAME

async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["name"] = update.message.text
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    return PHONE

async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["phone"] = update.message.text
    await update.message.reply_text("–û—Ç–ª–∏—á–Ω–æ üëç –£–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 10.10.2025):")
    return DATE

async def get_date(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["date"] = update.message.text
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Å—Ä–µ–¥–Ω–µ–µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ
    created_at = get_current_datetime()
    
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Google Sheets —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏
        sheet.append_row([
            context.user_data["tema"], 
            context.user_data["name"], 
            context.user_data["phone"], 
            context.user_data["date"],
            created_at  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ (—Å—Ä–µ–¥–Ω–µ–µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–µ –≤—Ä–µ–º—è)
        ])
        
        logger.info(f"–ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {context.user_data['name']} –≤ {created_at} (—Å—Ä–µ–¥–Ω–µ–µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–µ –≤—Ä–µ–º—è)")
        
        await update.message.reply_text(
            f"–°–ø–∞—Å–∏–±–æ, {context.user_data['name']}! üìÖ\n"
            "–í—ã –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è!"
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ Google Sheets: {e}")
        await update.message.reply_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
        )
    
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –æ—Ç–º–µ–Ω–∏–ª –¥–∏–∞–ª–æ–≥")
    await update.message.reply_text("–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    return ConversationHandler.END

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {context.error}")

def main():
    app = Application.builder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            TEMA: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_tema)],
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
            PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_phone)],
            DATE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_date)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv_handler)
    app.add_error_handler(error_handler)
    
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    app.run_polling()

if __name__ == "__main__":
    main()